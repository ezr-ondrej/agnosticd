- name: Parse names to proper repo names
  set_fact:
    content_temp_names: "{{
        (content.repos | map(attribute='name') | map('regex_replace', '[()]')) |
          zip(
            (content.repos | map(attribute='basearch', default='MISSING')),
            (content.repos | map(attribute='releasever', default='MISSING'))
          ) |
          map('join', ' ') | map('regex_replace', ' MISSING') | list
      }}"
    content_temp_repositories: []
- set_fact:
    content_temp_repositories: "{{ content_temp_repositories + [{ 'name': content_temp_names[item.0], 'product': item.1.product}] }}"
  with_indexed_items: "{{ content.repos }}"

- theforeman.foreman.katello_content_view:
    username: "{{ satellite_admin }}"
    password: "{{ satellite_admin_password }}"
    server_url: "https://{{ publicname }}"
    validate_certs: no
    name: "{{ content.content_view }}"
    organization: "{{ org }}"
    repositories: "{{ content_temp_repositories }}"

- theforeman.foreman.katello_content_view_filter:
    username: "{{ satellite_admin }}"
    password: "{{ satellite_admin_password }}"
    server_url: "https://{{ publicname }}"
    validate_certs: no
    name: "{{ item.name }}"
    organization: "{{ org }}"
    content_view: "{{ content.content_view }}"
    repositories: "{{ content_temp_repositories }}"
    filter_type: "erratum"
    start_date: "{{ item.start_date }}"
    end_date: "{{ item.end_date | d('')}}"
    types: "{{ item.types | d('bugfix,enhancement,security') }}"
    date_type: "{{ item.date_type | d('updated')}}"
    inclusion: "{{ item.inclusion | d(False)}}"
  when: content.filters is defined and item.type == 'erratum_date'
  loop: "{{ content.filters }}"